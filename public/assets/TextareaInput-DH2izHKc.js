import{T as u}from"./Label-BFNS-ixp.js";import{T as c}from"./InputError-IXNDXV76.js";import{_ as d,r as s,c as m,o as a,g as f,b as g,d as p,a as h,I as _}from"./app-CmanO5vD.js";import{v as b}from"./v4-BKrj-4V8.js";const x={emits:["update:modelValue"],components:{TecLabel:u,TecInputError:c},props:{id:{type:String,default(){return b()}},modelValue:String,label:String,error:String},mounted(){this.$nextTick(()=>{this.$refs.input.setAttribute("style",`height: ${this.$refs.input.scrollHeight+2}px`)})},methods:{focus(){this.$refs.input.focus()},select(){this.$refs.input.select()},autoResizeAndEmit(t){t.target.style.height="auto",t.target.style.height=`${t.target.scrollHeight+2}px`,this.$emit("update:modelValue",t.target.value)}}},T={class:"col-span-6 sm:col-span-4"},V=["id","value"];function v(t,r,e,y,k,o){const i=s("tec-label"),l=s("tec-input-error");return a(),m("div",T,[f(i,{for:e.id,value:e.label},null,8,["for","value"]),g("textarea",_({id:e.id,ref:"input"},t.$attrs,{value:e.modelValue,onInput:r[0]||(r[0]=(...n)=>o.autoResizeAndEmit&&o.autoResizeAndEmit(...n)),class:[{"border-red-500":e.error},"w-full mt-1 border-gray-300 focus:border-indigo-300 focus:ring-3 focus:ring-indigo-200/50 rounded-md shadow-sm"]}),null,16,V),e.error?(a(),p(l,{key:0,message:e.error,class:"mt-0"},null,8,["message"])):h("",!0)])}const S=d(x,[["render",v]]);export{S as T};
