import { k as V, q as y, ag as k, d as S, o as n, e as t, g as o, b as l, c as f, a as g, h as i, T as b, t as a, ah as U } from "./app-CmanO5vD.js"; import { C as m } from "./CheckBox-BvIjEx6v.js"; import { T as u } from "./TextInput-DMi2dCla.js"; import { S as D } from "./SelectInput-BdLKWJYF.js"; import { A as v } from "./AdminLayout-CZVbxH_w.js"; import { _ as d } from "./AutoComplete-DCdUm1YR.js"; import { L as h } from "./LoadingButton-DJovEPtR.js"; import { T as c } from "./FormSection-Bw8u_PxU.js"; import { T as w } from "./SectionTitle-CsKWWg1N.js"; import { T as $ } from "./ActionMessage-pdJfik6o.js"; import "./Checkbox-DL9ICh3J.js"; import "./InputError-IXNDXV76.js"; import "./v4-BKrj-4V8.js"; import "./Label-BFNS-ixp.js"; import "./Input-Dp9i-tt6.js"; import "./Modal-vEUc-xTy.js"; import "./DropdownLink-DLgJUFVy.js"; import "./ApplicationLogo-C9LXsB4R.js"; import "./ApplicationMark-CtaHwZ2O.js"; const T = { class: "flex items-start flex-wrap -mr-4 md:-mr-6" }, j = { class: "w-full sm:w-1/2" }, I = { class: "mr-6 mb-6" }, L = { class: "w-full sm:w-1/2" }, P = { class: "mr-6 mb-6" }, A = { class: "w-full sm:w-1/2" }, N = { class: "mr-6 mb-6" }, B = { class: "w-full sm:w-1/2" }, q = { class: "mr-6 mb-6" }, C = { class: "w-full sm:w-1/2" }, F = { class: "mr-6 mb-6" }, E = { class: "w-full sm:w-1/2" }, O = { class: "mr-6 mb-6" }, M = { class: "w-full sm:w-1/2" }, R = { class: "mr-6 mb-6" }, H = { class: "w-full sm:w-1/2" }, G = { class: "mr-6 mb-6" }, J = { key: 0, class: "w-full sm:w-1/2" }, Q = { class: "mr-6 mb-6" }, W = { class: "w-full mb-4" }, Y = { class: "w-full mb-4" }, z = { key: 0, class: "mt-6 w-full sm:w-1/2" }, K = { class: "mr-6 mb-6" }, X = { class: "w-full mb-4" }, Z = { class: "mt-8" }, x = { class: "mt-6 bg-white shadow-sm overflow-hidden md:rounded-md" }, ee = { class: "border-gray-200" }, le = { class: "bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6" }, se = { class: "font-medium text-gray-500" }, re = { class: "mt-1 text-gray-900 sm:mt-0 sm:col-span-2" }, oe = { class: "bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6" }, ae = { class: "font-medium text-gray-500" }, te = { class: "mt-1 text-gray-900 sm:mt-0 sm:col-span-2" }, ie = { class: "bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6" }, de = { class: "font-medium text-gray-500" }, ne = { class: "mt-1 text-gray-900 sm:mt-0 sm:col-span-2" }, me = { key: 0, class: "mt-8 flex items-center justify-center gap-6 text-sm" }, ue = { class: "font-bold" }, pe = { class: "font-bold" }, fe = { props: ["current", "laravel"], components: { CheckBox: m, TextInput: u, SelectInput: D, AdminLayout: v, AutoComplete: d, LoadingButton: h, TecFormSection: c, TecSectionTitle: w, TecActionMessage: $ }, data() { return { form: this.$inertia.form({ _method: "POST", name: this.current.name, sidebar: this.current.sidebar, language: this.current.language, fraction: +this.current.fraction, per_page: +this.current.per_page, weight_unit: this.current.weight_unit, date_format: this.current.date_format, currency_code: this.current.currency_code, sidebar_style: this.current.sidebar_style, default_locale: this.current.default_locale, reference: this.current.reference || "ulid", over_selling: this.current.over_selling == 1, track_weight: this.current.track_weight == 1, auto_email: this.current.auto_email == 1 }) } }, methods: { submit() { this.form.post(route("settings.store"), { preserveScroll: !0 }) } } }, Ae = Object.assign(fe, { __name: "Index", setup(_) { const p = V(null); return y(async () => { let e = await k(() => import("./composer-SGDvYWon.js"), []); p.value = e.version }), (e, s) => (n(), S(v, { title: e.$t("Settings") }, { default: t(() => [o(c, { onSubmitted: e.submit }, { title: t(() => [i(a(e.$t("Settings")), 1)]), description: t(() => [i(a(e.$t("Please fill the form below to update settings.")), 1)]), form: t(() => [l("div", T, [l("div", j, [l("div", I, [o(u, { modelValue: e.form.name, "onUpdate:modelValue": s[0] || (s[0] = r => e.form.name = r), error: e.$page.props.errors.name, label: e.$t("Site Name") }, null, 8, ["modelValue", "error", "label"])])]), l("div", L, [l("div", P, [o(d, { json: "", id: "language", searchable: !1, modelValue: e.form.language, "onUpdate:modelValue": s[1] || (s[1] = r => e.form.language = r), label: e.$t("Language"), error: e.$page.props.errors.language, suggestions: e.$page.props.languages }, null, 8, ["modelValue", "label", "error", "suggestions"])])]), l("div", A, [l("div", N, [o(d, { json: "", id: "reference", searchable: !1, modelValue: e.form.reference, "onUpdate:modelValue": s[2] || (s[2] = r => e.form.reference = r), label: e.$t("Reference"), error: e.$page.props.errors.reference, suggestions: [{ value: "ulid", label: "ULID - Universally Unique Lexicographically Sortable Identifier" }, { value: "ai", label: "Auto Increment (MYSQL only)" }, { value: "uniqid", label: "Uniqid - PHP Generate a Unique ID" }, { value: "uuid", label: "UUID - Universally Unique Identifier" }] }, null, 8, ["modelValue", "label", "error"])])]), l("div", B, [l("div", q, [o(u, { modelValue: e.form.default_locale, "onUpdate:modelValue": s[3] || (s[3] = r => e.form.default_locale = r), error: e.$page.props.errors.default_locale, label: e.$t("Date & Number Locale") }, null, 8, ["modelValue", "error", "label"])])]), l("div", C, [l("div", F, [o(d, { json: "", id: "date_format", searchable: !1, modelValue: e.form.date_format, "onUpdate:modelValue": s[4] || (s[4] = r => e.form.date_format = r), label: e.$t("Date Format"), error: e.$page.props.errors.date_format, suggestions: [{ value: "php", label: e.$t("On Server Side (PHP)") }, { value: "js", label: e.$t("In Browser (Javascript)") }] }, null, 8, ["modelValue", "label", "error", "suggestions"])])]), l("div", E, [l("div", O, [o(d, { json: "", id: "fraction", searchable: !1, modelValue: e.form.fraction, "onUpdate:modelValue": s[5] || (s[5] = r => e.form.fraction = r), label: e.$t("Decimal Fractions"), error: e.$page.props.errors.fraction, suggestions: [{ value: 0, label: 0 }, { value: 1, label: 1 }, { value: 2, label: 2 }, { value: 3, label: 3 }, { value: 4, label: 4 }] }, null, 8, ["modelValue", "label", "error"])])]), l("div", M, [l("div", R, [o(d, { json: "", id: "per_page", searchable: !1, modelValue: e.form.per_page, "onUpdate:modelValue": s[6] || (s[6] = r => e.form.per_page = r), label: e.$t("Rows per page"), error: e.$page.props.errors.per_page, suggestions: [{ value: 10, label: 10 }, { value: 15, label: 15 }, { value: 25, label: 25 }, { value: 50, label: 50 }, { value: 100, label: 100 }] }, null, 8, ["modelValue", "label", "error"])])]), l("div", H, [l("div", G, [o(d, { json: "", id: "sidebar", searchable: !1, label: e.$t("Sidebar"), modelValue: e.form.sidebar, "onUpdate:modelValue": s[7] || (s[7] = r => e.form.sidebar = r), error: e.$page.props.errors.sidebar, suggestions: [{ value: "full", label: e.$t("Default") }, { value: "mini", label: e.$t("Collapsed") }] }, null, 8, ["label", "modelValue", "error", "suggestions"])])]), o(b, { name: "slidedown" }, { default: t(() => [e.form.sidebar == "full" ? (n(), f("div", J, [l("div", Q, [o(d, { json: "", id: "sidebar_style", searchable: !1, label: e.$t("Sidebar Style"), modelValue: e.form.sidebar_style, "onUpdate:modelValue": s[8] || (s[8] = r => e.form.sidebar_style = r), error: e.$page.props.errors.sidebar_style, suggestions: [{ value: "full", label: e.$t("Full") }, { value: "dropdown", label: e.$t("Dropdown") }] }, null, 8, ["label", "modelValue", "error", "suggestions"])])])) : g("", !0)]), _: 1 }), l("div", W, [o(m, { id: "over_selling", label: e.$t("Enable over selling"), checked: e.form.over_selling, "onUpdate:checked": s[9] || (s[9] = r => e.form.over_selling = r), error: e.$page.props.errors.over_selling }, null, 8, ["label", "checked", "error"])]), l("div", Y, [o(m, { id: "track_weight", checked: e.form.track_weight, "onUpdate:checked": s[10] || (s[10] = r => e.form.track_weight = r), error: e.$page.props.errors.track_weight, label: e.$t("Track weight of item") }, null, 8, ["checked", "error", "label"]), o(b, { name: "slidedown" }, { default: t(() => [e.form.track_weight ? (n(), f("div", z, [l("div", K, [o(u, { modelValue: e.form.weight_unit, "onUpdate:modelValue": s[11] || (s[11] = r => e.form.weight_unit = r), error: e.$page.props.errors.weight_unit, label: e.$t("Weight Unit") }, null, 8, ["modelValue", "error", "label"])])])) : g("", !0)]), _: 1 })]), l("div", X, [o(m, { id: "auto_email", checked: e.form.auto_email, "onUpdate:checked": s[12] || (s[12] = r => e.form.auto_email = r), error: e.$page.props.errors.auto_email, label: e.$t("Auto email (adjustments, check ins, check outs and transfers)") }, null, 8, ["checked", "error", "label"])])])]), actions: t(() => [o($, { on: e.form.recentlySuccessful, class: "mr-3" }, { default: t(() => [...s[13] || (s[13] = [i(" Saved. ", -1)])]), _: 1 }, 8, ["on"]), o(h, { type: "submit", loading: e.form.processing, disabled: e.form.processing }, { default: t(() => [...s[14] || (s[14] = [i(" Save ", -1)])]), _: 1 }, 8, ["loading", "disabled"])]), _: 1 }, 8, ["onSubmitted"]), l("div", Z, [o(w, null, { title: t(() => [i(a(e.$t("Preview")), 1)]), description: t(() => [i(a(e.$t("Number and Date Format")), 1)]), _: 1 }), l("div", x, [l("div", ee, [l("dl", null, [l("div", le, [l("dt", se, a(e.$t("Number")), 1), l("dd", re, a(e.$number(200000005e-1, e.form.default_locale, { minimumFractionDigits: e.form.fraction })), 1)]), l("div", oe, [l("dt", ae, a(e.$t("Date")), 1), l("dd", te, a(e.$date(new Date().toString(), e.form.default_locale)), 1)]), l("div", ie, [l("dt", de, a(e.$t("Date Time")), 1), l("dd", ne, a(e.$datetime(new Date().toString(), e.form.default_locale)), 1)])])])])]), p.value ? (n(), f("div", me, [l("div", null, [s[15] || (s[15] = i(" App: v", -1)), l("span", ue, a(p.value), 1)]), l("div", null, [s[16] || (s[16] = i(" Laravel: v", -1)), l("span", pe, a(_.laravel), 1)]), l("div", null, [s[17] || (s[17] = i(" Vue: v", -1)), l("span", { class: "font-bold" }, a(U))]), s[18] || (s[18] = l("div", null, [l("a", { href: "/documentation.pdf", class: "font-bold ml-4" }, "Docs")], -1))])) : g("", !0)]), _: 1 }, 8, ["title"])) } }); export { Ae as default };
